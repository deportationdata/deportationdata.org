---
title: Depósito de informes
---

```{r}
library(tidyverse)
library(reactable)
library(readxl)
library(scales)

data_url <- "https://ucla.app.box.com/index.php?rm=box_download_shared_file&shared_name=9d8qnnduhus4bd5mwqt7l95kz34fic2v&file_id=f_"

df_list <- read_excel("labels.xlsx", sheet = "data")
sources <- read_excel("labels_sources.xlsx")

df_list <-
  df_list |>
  left_join(
    sources |>
      filter(!is.na(Agency), !is.na(Release), !is.na(Type)) |>
      select(
        Agency,
        Release,
        Type,
        source_label_3 = source_label,
        source_url_3 = source_URL
      ) |>
      distinct(),
    by = c("Agency", "Release", "Type")
  ) |>
  # Next: Agency + Release
  left_join(
    sources |>
      filter(!is.na(Agency), !is.na(Release), is.na(Type)) |>
      select(
        Agency,
        Release,
        source_label_2 = source_label,
        source_url_2 = source_URL
      ) |>
      distinct(),
    by = c("Agency", "Release")
  ) |>
  # Next: Agency + Type
  left_join(
    sources |>
      filter(!is.na(Agency), is.na(Release), !is.na(Type)) |>
      select(
        Agency,
        Type,
        source_label_4 = source_label,
        source_url_4 = source_URL
      ) |>
      distinct(),
    by = c("Agency", "Type")
  ) |>
  # Least specific: Agency only
  left_join(
    sources |>
      filter(!is.na(Agency), is.na(Release), is.na(Type)) |>
      select(
        Agency,
        source_label_1 = source_label,
        source_url_1 = source_URL
      ) |>
      distinct(),
    by = "Agency"
  ) |>
  # Final preferred label and URL using priority order
  mutate(
    source_label = coalesce(
      source_label_3,
      source_label_2,
      source_label_4,
      source_label_1
    ),
    source_URL = coalesce(
      source_url_3,
      source_url_2,
      source_url_4,
      source_url_1
    )
  )

format_numbers <- function(x) {
  ifelse(
    abs(x) >= 1e6,
    label_number(scale = 1e-6, suffix = "M", accuracy = 1)(x),
    ifelse(
      abs(x) >= 1e3,
      label_number(scale = 1e-3, suffix = "K", accuracy = 1)(x),
      label_number(accuracy = 1)(x)
    )
  )
}

df_list <-
  df_list |>
  mutate(
    url = glue::glue("{data_url}{BoxID}"),
    Start,
    End,
    Records = format_numbers(Records),
    Source = glue::glue("<a href='{source_URL}'>{source_label}</a>"),
    Download = glue::glue(
      "<a href='{url}'>{tools::file_ext(Filename)}</a> ({Filesize})"
    ),
  )

col_defs <- list(
  Start = colDef(minWidth = 75),
  End = colDef(minWidth = 75),
  Records = colDef(minWidth = 55, align = "right"),
  Source = colDef(minWidth = 65, html = TRUE),
  Download = colDef(minWidth = 100, html = TRUE)
)

options(
  reactable.theme = reactableTheme(
    backgroundColor = "#F4F6F7"
  )
)
```

Nuestro proyecto se centra en la recopilación y publicación de datos a nivel individual, pero esta página es una excepción: aquí recopilamos y publicamos informes gubernamentales que se basan en los conjuntos de datos a nivel individual que publicamos. Esperamos que este repositorio centralizado de informes (y enlaces a sitios web gubernamentales) ayude a los usuarios de los datos a nivel individual.

Los informes proceden de la Oficina de Estadísticas de Seguridad Nacional (OHSS), el Servicio de Inmigración y Control de Aduanas (ICE), el Servicio de Aduanas y Protección de Fronteras (CBP) y la Oficina Ejecutiva de Revisión de Casos de Inmigración (EOIR). Por lo general, estos informes pueden descargarse directamente del gobierno; nosotros los publicamos para comodidad de los usuarios. La fuente original es siempre un organismo gubernamental (OHSS, ICE, CBP o EOIR), pero cuando otros terceros han publicado los informes antes que nosotros, enlazamos a sus sitios como fuente.

## Aduanas y Protección de Fronteras

El CBP mantiene un conjunto de cuadros de mando que incluyen estadísticas del año hasta la fecha, así como de los últimos ejercicios fiscales. Entre ellos figuran:

[Encuentros en la frontera terrestre suroeste del CBP](https://www.cbp.gov/newsroom/stats/southwest-land-border-encounters)
 Cuadro de mandos para el seguimiento de los encuentros a lo largo de la frontera sur en y entre los puertos de entrada.

[Estadísticas de aplicación de la CBP](https://www.cbp.gov/newsroom/stats/cbp-enforcement-statistics)
 Estadísticas sobre muchos aspectos de las medidas de ejecución del CBP.

[Estadísticas de custodia y traslado](https://www.cbp.gov/newsroom/stats/custody-and-transfer-statistics)
 Estadísticas de seguimiento de la detención y los resultados tras los encuentros fronterizos en los puertos de entrada y entre ellos.

## Oficina Ejecutiva para la Revisión de la Inmigración<br>(Tribunales de Inmigración)

La EOIR publica una serie de [estadísticas sobre carga de trabajo y adjudicaciones](https://www.justice.gov/eoir/workload-and-adjudication-statistics).

## Servicio de Inmigración y Control de Aduanas

### Informe anual

La CIE recopila diversas estadísticas descriptivas en su informe anual.

```{r}
ice_annual_reports_files <-
  df_list |>
  filter(Agency == "ICE", Type == "annual_reports") |>
  mutate(
    Date = str_extract(Filename, "\\d{4}")
  ) |>
  arrange(desc(Date)) |>
  transmute(Date, Source, Download)
```

```{r}
ice_annual_reports_files |>
  slice(1) |>
  reactable::reactable(
    columns = list(
      Date = colDef(align = "left"),
      Source = colDef(minWidth = 65, html = TRUE),
      Download = colDef(minWidth = 100, html = TRUE)
    ),
    pagination = FALSE
  )
```

<div style="margin-top: 0.5em;"></div>

<detalles>
<sumario>Informes anteriores</sumario>

```{r}
ice_annual_reports_files |>
  slice(-1) |>
  reactable::reactable(
    columns = list(
      Date = colDef(align = "left"),
      Source = colDef(minWidth = 65, html = TRUE),
      Download = colDef(minWidth = 100, html = TRUE)
    ),
    pagination = FALSE
  )
```

</detalles>

### Hoja de cálculo de gestión de detenciones

El ICE publica unas dos veces al mes una hoja de cálculo en la que se hace un seguimiento de las entradas, los tipos de casos, la información sobre los centros de detención y otras estadísticas descriptivas relacionadas con la detención.

```{r}
ice_detention_management_ytd_files <-
  df_list |>
  filter(
    Agency == "ICE",
    Type == "detention_management",
    str_detect(Filename, "FY25")
  ) |>
  arrange(desc(start_date)) |>
  transmute(Start, End, Source, Download)
```

#### En lo que va de año:

```{r}
ice_detention_management_ytd_files |>
  slice(1) |>
  reactable::reactable(
    columns = list(
      Start = colDef(),
      End = colDef(),
      Source = colDef(minWidth = 65, html = TRUE),
      Download = colDef(minWidth = 100, html = TRUE)
    ),
    pagination = FALSE
  )
```

<div style="margin-top: 0.5em;"></div>

<detalles>
<sumario>Informes anteriores</sumario>

```{r}
ice_detention_management_ytd_files |>
  slice(-1) |>
  reactable::reactable(
    columns = list(
      Start = colDef(),
      End = colDef(),
      Source = colDef(minWidth = 65, html = TRUE),
      Download = colDef(minWidth = 100, html = TRUE)
    ),
    pagination = FALSE
  )
```

</detalles>

#### Fin de ejercicio:

```{r}
ice_detention_management_ay_files <-
  df_list |>
  filter(
    Agency == "ICE",
    Type == "detention_management",
    !str_detect(Filename, "FY25")
  ) |>
  mutate(
    Date = str_extract(Filename, "(?<=FY)\\d{2}") |> as.integer(),
    Date = Date + 2000
  ) |>
  arrange(desc(Date)) |>
  transmute(Start, End, Source, Download)
```

```{r}
ice_detention_management_ay_files |>
  slice(1) |>
  reactable::reactable(
    columns = list(
      Start = colDef(align = "left"),
      End = colDef(align = "left"),
      Source = colDef(minWidth = 65, html = TRUE),
      Download = colDef(minWidth = 100, html = TRUE)
    ),
    pagination = FALSE
  )
```

<div style="margin-top: 0.5em;"></div>

<detalles>
<sumario>Informes anteriores</sumario>

```{r}
ice_detention_management_ay_files |>
  slice(-1) |>
  reactable::reactable(
    columns = list(
      Start = colDef(align = "left"),
      End = colDef(align = "left"),
      Source = colDef(minWidth = 65, html = TRUE),
      Download = colDef(minWidth = 100, html = TRUE)
    ),
    pagination = FALSE
  )
```

</detalles>

## Estadísticas de la Oficina de Seguridad Nacional

### Tablas mensuales de aplicación de la legislación de inmigración y procesos judiciales

Hasta enero de 2025, la Oficina de Estadísticas de Seguridad Nacional publicó una hoja de cálculo mensual en la que se hacía un seguimiento de diversas actuaciones tanto del CBP como del ICE. No sabemos si cabe esperar futuras publicaciones.

```{r}
enf_files <-
  df_list |>
  filter(Agency == "OHSS", Type == "enf_monthly") |>
  mutate(
    raw = str_extract(Filename, "(?:\\d{4}|\\d{2})[-_]\\d{4}"),
    compact = str_remove_all(raw, "[-_]"),
    report_date = if_else(
      nchar(compact) == 6,
      mdy(paste0(str_sub(compact, 3), str_sub(compact, 1, 2))),
      mdy(paste0(str_sub(compact, 5), str_sub(compact, 1, 4)))
    ),
    Date = format(report_date, "%b. %Y")
  ) |>
  arrange(desc(report_date)) |>
  transmute(Date, Source, Download)
```

```{r}
enf_files |>
  slice(1) |>
  reactable::reactable(
    columns = list(
      Date = colDef(align = "left"),
      Source = colDef(minWidth = 65, html = TRUE),
      Download = colDef(minWidth = 100, html = TRUE)
    ),
    pagination = FALSE
  )
```

<div style="margin-top: 0.5em;"></div>

<detalles>
<sumario>Informes anteriores</sumario>

```{r}
enf_files |>
  slice(-1) |>
  reactable::reactable(
    columns = list(
      Date = colDef(align = "left"),
      Source = colDef(minWidth = 65, html = TRUE),
      Download = colDef(minWidth = 100, html = TRUE)
    ),
    pagination = FALSE
  )
```

</detalles>


