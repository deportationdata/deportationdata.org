on:
  push:
    branches: [main]

  # PR events, including close/merge
  pull_request:
    types: [opened, synchronize, reopened, closed]

name: Render and Publish

permissions:
  contents: write
  pages: write
  issues: write         
  pull-requests: write  

jobs:
  # --------------------------------------------------
  # 1. Build / deploy site
  # --------------------------------------------------
  build-deploy:
    # Skip if the PR is being closed (we only need cleanup then)
    if: github.event_name == 'push' || github.event.action != 'closed'
    runs-on: ubuntu-latest
    env:
      PR_PATH: pull/${{ github.event.number }}

    steps:
      - name: Set env var only on PR
        if: github.event_name == 'pull_request'
        run: echo "BABELQUARTO_CI_URL=/preview/pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev libfontconfig1-dev libfreetype6-dev \
            libpng-dev libtiff5-dev libjpeg-dev libharfbuzz-dev libfribidi-dev

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - uses: r-lib/actions/setup-renv@v2
        with:
          cache-version: 1

      - name: Render website with Babelquarto
        run: Rscript -e 'babelquarto::render_website()'

      # ---- Deploy to gh-pages ---------------------------------------------
      - name: Check out gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          fetch-depth: 1

      - name: Copy site to PR preview folder
        if: github.event_name == 'pull_request'
        run: |
          mkdir -p gh-pages/preview/pr-${{ github.event.pull_request.number }}
          rsync -av --delete _site/ gh-pages/preview/pr-${{ github.event.pull_request.number }}/

      - name: Copy site to main (production) folder
        if: github.ref == 'refs/heads/main'
        run: |
          rsync -av --delete --exclude='.git/' --exclude='preview/' _site/ gh-pages/

      - name: Commit & push site
        run: |
          cd gh-pages
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name  "github-actions[bot]"
          git add .
          git commit -m "Deploy site" || echo "No changes to commit"
          git push origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # --------------------------------------------------
  # 2. Delete preview folder when PR is closed
  # --------------------------------------------------
  cleanup-preview:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Check out gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 1

      - name: Remove preview folder
        run: |
          PR_DIR="preview/pr-${{ github.event.pull_request.number }}"
          if [ -d "$PR_DIR" ]; then
            git rm -r --ignore-unmatch "$PR_DIR"
          fi

      - name: Commit & push removal
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name  "github-actions[bot]"
          git commit -m "Remove preview for PR #${{ github.event.pull_request.number }}" || echo "Nothing to remove"
          git push origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # --------------------------------------------------
  # 3. Comment with preview URL after deploy succeeds
  # --------------------------------------------------
  comment-preview:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    needs: build-deploy       # Wait until deploy job completes successfully
    runs-on: ubuntu-latest

    steps:
      - name: Post PR preview link
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.issue.number;
            const url = `https://deportationdata.org/preview/pr-${pr}/`;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: pr,
              body: `ðŸš€ PR Preview Available: [View Here](${url})`
            });
