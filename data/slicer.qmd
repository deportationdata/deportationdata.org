---
title: "Data download tool"
page-layout: full
format:
  html:
    code-tools: false
    css: https://cdn.datatables.net/2.3.2/css/dataTables.bootstrap5.css
---

<!-- ```{=html}
<!-- DataTables + Bootstrap 5 -->
<!-- <link rel="stylesheet" href="https://cdn.datatables.net/2.3.2/css/dataTables.bootstrap5.min.css"> -->
<!-- <link rel="stylesheet" href="https://cdn.datatables.net/buttons/3.0.1/css/buttons.bootstrap5.min.css"> -->
<!-- <script src="https://cdn.datatables.net/2.3.2/js/dataTables.bootstrap5.min.js"></script> -->
<!-- <script src="https://cdn.datatables.net/buttons/3.0.1/js/buttons.bootstrap5.min.js"></script> -->
<!-- ``` -->

```{=html}
<!-- DataTables + Bootstrap 5 styling -->
<link rel="stylesheet" href="https://cdn.datatables.net/2.3.2/css/dataTables.bootstrap5.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/buttons/3.0.1/css/buttons.bootstrap5.min.css">
<script src="https://cdn.datatables.net/2.3.2/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/3.0.1/js/buttons.bootstrap5.min.js"></script>
<style>
/* --- Flat button style to match Bootstrap outline-primary --- */
.dt-button,
.dt-button:visited,
.dt-button:active,
.dt-button:focus {
  background: transparent !important;
  border: 1px solid var(--bs-primary) !important;
  color: var(--bs-primary) !important;
  border-radius: 0.25rem !important;
  box-shadow: none !important;
  font-size: 0.875rem !important;
  text-shadow: none !important;
  padding: 0.25rem 0.5rem !important;
  transition: none !important;
}

/* --- On hover --- */
.dt-button:hover,
.dt-button:focus:hover {
  background-color: var(--bs-primary) !important;
  color: white !important;
}

/* --- Remove DataTables' gradient background on click --- */
.dt-button:active {
  background-color: var(--bs-primary) !important;
  color: white !important;
  box-shadow: none !important;
}

/* --- Remove dropdown menu styling (Download filtered data menu) --- */
div.dt-button-collection {
  background: white !important;
  border: 1px solid #ccc !important;
  border-radius: 0.25rem !important;
  box-shadow: 0 0.25rem 0.5rem rgba(0,0,0,0.1) !important;
}

/* Style individual buttons in the dropdown */
div.dt-button-collection .dt-button {
  background: none !important;
  color: var(--bs-primary) !important;
  border: none !important;
  padding: 0.375rem 0.75rem !important;
  width: 100%;
  text-align: left;
}

/* Hover on dropdown items */
div.dt-button-collection .dt-button:hover {
  background-color: var(--bs-primary) !important;
  color: white !important;
}

/* --- Pagination buttons --- */
/* Base: reserve space for border */
.dataTables_wrapper .dataTables_paginate .paginate_button {
  background: transparent !important;
  border: 1px solid transparent !important;
  color: var(--bs-primary) !important;
  font-size: 0.875rem;
  margin: 0 0.2rem;
  padding: 0.25rem 0.5rem;
  box-shadow: none !important;
  /* border-radius: 0.25rem; */
  transition: all 0.1s ease-in-out;
}

/* Hover effect: only outline on hover */
.dataTables_wrapper .dataTables_paginate .paginate_button:not(.current):hover {
  border-color: var(--bs-primary) !important;
  background-color: transparent !important;
  color: var(--bs-primary) !important;
}

/* Current page: filled */
.dataTables_wrapper .dataTables_paginate .paginate_button.current {
  background-color: var(--bs-primary) !important;
  color: white !important;
  border-color: var(--bs-primary) !important;
  font-weight: 600;
}

/* Next and Previous: always outlined */
.dataTables_wrapper .dataTables_paginate .paginate_button.previous,
.dataTables_wrapper .dataTables_paginate .paginate_button.next {
  border-color: var(--bs-primary) !important;
}

/* Hover on Next/Previous */
.dataTables_wrapper .dataTables_paginate .paginate_button.previous:hover,
.dataTables_wrapper .dataTables_paginate .paginate_button.next:hover {
  background-color: var(--bs-primary) !important;
  color: white !important;
}

/* Disabled state */
.dataTables_wrapper .dataTables_paginate .paginate_button.disabled {
  opacity: 0.4 !important;
  pointer-events: none !important;
  color: #ccc !important;
  border-color: #ccc !important;
}

/* Override float and center pagination */
.dataTables_wrapper .dataTables_paginate {
  float: none !important;
  display: flex !important;
  justify-content: center !important;
  align-items: center;
  margin-top: 1rem;
}
</style>
```

```{r}
library(tidyverse); library(DT); library(jsonlite); library(glue)

server_url <- "https://ddp-api-4bcgl.ondigitalocean.app"

lookup <- fromJSON(glue("{server_url}/data?start=0&length=5"))$data
```

```{r}
DT::datatable(
  lookup[0, ],                 # empty shell â€“ DT will ajax-load rows
  rownames   = FALSE,
  class      = "compact stripe",
  extensions = "Buttons",
  options = list(
    dom        = "Btp",
    serverSide = TRUE,
    pageLength = 100,
    scrollX    = TRUE,

    ajax = list(
      url  = glue("{server_url}/data"),
      type = "GET",
      data = DT::JS("
        function(d){
          const join = arr => Array.isArray(arr) ? arr.join(',') : arr;
          d.state     = join($('#stateFilter').val());     // created by buildMulti
          d.aor       = join($('#aorFilter').val());
          d.country   = join($('#countryFilter').val());
          d.date_from = $('#dateFrom').val();
          d.date_to   = $('#dateTo').val();
        }")
    ),

    initComplete = DT::JS("
      function(settings, json){
    
        var api     = this.api();
        var filters = json.filters;          // { apprehension_state: [...], ... }
    
        // helper --------------------------------------------------------------
        function buildMulti(colName, values){
          var colIdx = api.column(colName + ':name').index();
          var cell   = $(api.column(colIdx).header()).empty();
    
          $('<select multiple class=\"form-select form-select-sm\">')
            .append('<option value=\"\">(any)</option>')
            .append( $.map(values, v => $('<option>', {value: v, text: v})) )
            .appendTo(cell)
            .on('change', function(){
              var vals  = $(this).val() || [];
              var regex = vals.length ? '^(' + vals.join('|') + ')$' : '';
              api.column(colIdx).search(regex, true, false).draw();
            });
        }
    
        // multi-selects -------------------------------------------------------
        buildMulti('apprehension_state',  filters.apprehension_state);
        buildMulti('apprehension_aor',    filters.apprehension_aor);
        buildMulti('citizenship_country', filters.citizenship_country);
    
        // date range ----------------------------------------------------------
        var dateIdx = api.column('apprehension_date:name').index();
        var dateCell= $(api.column(dateIdx).header()).empty()
                       .css('min-width','160px');         // a bit wider
    
        $('<input>', {id:'dateFrom', type:'date', class:'form-control form-control-sm mb-1'})
          .appendTo(dateCell);
        $('<input>', {id:'dateTo',   type:'date', class:'form-control form-control-sm'})
          .appendTo(dateCell);
    
        $('#dateFrom, #dateTo').on('change', () => api.ajax.reload());
      }
    "),

    columns = lapply(names(lookup), function(col) list(data = col, name = col)),

    buttons = list(
      list(
        extend = "collection",
        text   = "Download filtered data",
        className = "btn btn-outline-primary btn-sm",
        buttons = list(
          list(
            extend = "csv", text = "CSV",
            action = DT::JS(glue("
              function(e, dt, node){{
                var p = dt.ajax.params(); p.start=0; p.length=-1;
                window.open('{server_url}/download?' + $.param(p) + '&format=csv', '_blank');
              }}"))
          ),
          list(
            extend = "csv", text = "Excel (.xlsx)",
            action = DT::JS(glue("
              function(e, dt, node){{
                var p = dt.ajax.params(); p.start=0; p.length=-1;
                window.open('{server_url}/download?' + $.param(p) + '&format=xlsx', '_blank');
              }}"))
          ),
          list(
            extend = "csv", text = "Stata (.dta)",
            action = DT::JS(glue("
              function(e, dt, node){{
                var p = dt.ajax.params(); p.start=0; p.length=-1;
                window.open('{server_url}/download?' + $.param(p) + '&format=dta', '_blank');
              }}"))
          )
        )
      )
    )
  )
) |> DT::formatStyle(columns = seq_along(lookup), `vertical-align`="top", `white-space`="nowrap")
```