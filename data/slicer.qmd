---
title: "Data download tool"
page-layout: full
format:
  html:
    code-tools: false
    css: https://cdn.datatables.net/2.3.2/css/dataTables.bootstrap5.css
---

```{=html}
<!-- DataTables + Bootstrap 5 styling -->
<!-- jQuery first (needed for $.param) -->
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>

<!-- DataTables core library (MISSING - ADD THIS) -->
<script src="https://cdn.datatables.net/2.3.2/js/dataTables.min.js"></script>

<!-- DataTables core + Bootstrap 5 styling -->
<link  rel="stylesheet" href="https://cdn.datatables.net/2.3.2/css/dataTables.bootstrap5.min.css">
<script src="https://cdn.datatables.net/2.3.2/js/dataTables.bootstrap5.min.js"></script>

<!-- Buttons: core, then Bootstrap skin -->
<script src="https://cdn.datatables.net/buttons/3.0.1/js/dataTables.buttons.min.js"></script>
<link  rel="stylesheet" href="https://cdn.datatables.net/buttons/3.0.1/css/buttons.bootstrap5.min.css">
<script src="https://cdn.datatables.net/buttons/3.0.1/js/buttons.bootstrap5.min.js"></script>
```

```{r}
library(tidyverse); library(DT); library(jsonlite); library(glue)

server_url <- "https://ddp-api-4bcgl.ondigitalocean.app"
```

```{r}
# 0-row frame for column names â”€ keeps page light
cols_only <- jsonlite::fromJSON(
  glue("{server_url}/data?start=0&length=1")
)$data[0, ]

datatable(
  cols_only,
  # Remove this line - filter doesn't work well with serverSide = TRUE
  # filter = list(position = "top", plain = TRUE),   
  extensions = "Buttons",
  rownames  = FALSE,
  class     = "compact stripe",
  options = list(
    dom        = "Brtip",       # Add 'f' for the main search box
    serverSide = TRUE,
    processing = TRUE,
    pageLength = 100,
    ordering = FALSE,
    ajax       = list(
      url  = glue("{server_url}/data"),
      type = "GET"
    ),
    columns    = lapply(names(cols_only), \(nm) list(data = nm)),

    # Add individual column search - this replaces the filter parameter
    initComplete = JS("
      function(settings, json) {
        this.api().columns().every(function() {
          var column = this;
          var input = $('<input type=\"text\" placeholder=\"Search...\" />')
            .appendTo($(column.header()))
            .on('keyup change clear', function() {
              if (column.search() !== this.value) {
                column.search(this.value).draw();
              }
            });
        });
      }
    "),

    # ---------- custom download button group ----------
    buttons = list(
      list(
        extend    = "collection",
        text      = "Download filtered data",
        className = "btn btn-outline-primary btn-sm",
        buttons   = list(
          list(
            extend    = "csv",
            text      = "CSV",
            className = "btn btn-outline-primary btn-sm",
            action    = JS(glue("
              function (e, dt, node) {{
                var p = dt.ajax.params();
                p.start = 0; p.length = -1;                    // all rows
                window.open('{server_url}/download?' +
                            $.param(p) + '&format=csv', '_blank');
              }}"))
          ),
          list(
            extend    = "csv",
            text      = "Excel (.xlsx)",
            className = "btn btn-outline-primary btn-sm",
            action    = JS(glue("
              function (e, dt, node) {{
                var p = dt.ajax.params();
                p.start = 0; p.length = -1;
                window.open('{server_url}/download?' +
                            $.param(p) + '&format=xlsx', '_blank');
              }}"))
          ),
          list(
            extend    = "csv",
            text      = "Stata (.dta)",
            className = "btn btn-outline-primary btn-sm",
            action    = JS(glue("
              function (e, dt, node) {{
                var p = dt.ajax.params();
                p.start = 0; p.length = -1;
                window.open('{server_url}/download?' +
                            $.param(p) + '&format=dta', '_blank');
              }}"))
          )
        )
      )
    )
  )
) |> DT::formatStyle(columns = seq_along(cols_only), `vertical-align`="top", `white-space`="nowrap")
```